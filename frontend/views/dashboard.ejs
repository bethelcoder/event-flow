<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Staff Dashboard</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  
  <link rel="stylesheet" href="/styles/staff-dashboard.css" />
  <link rel="stylesheet" href="/styles/announcements.css" />
  <link rel="stylesheet" href="/styles/report-incident.css" />

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
</head>
<body>

<section class="line-container">

  <!-- ============== ALPHA (Sidebar) ============== -->
  <section class="alpha" id="alpha">
    <h2 class="alpha-header">Staff Dashboard</h2>
    <nav class="alpha-buttons">
      <a href="#" class="alpha-btn" data-page="/team-chats">
        <i class="fa-solid fa-message"></i> Team Chats
      </a>
      <a href="#" class="alpha-btn" data-page="/announcements">
        <i class="fas fa-bell"></i> Announcements
      </a>
      <a href="#" class="alpha-btn" data-page="/report-incident">
        <i class="fas fa-triangle-exclamation"></i> Report Incident
      </a>
      <a href="#" class="alpha-btn" data-page="/my-tasks">
        <i class="fas fa-clipboard-check"></i> My Tasks
      </a>
    </nav>
  </section>

  <!-- ============== BETA (Top Navbar) ============== -->
  <section class="beta" id="beta">
    <div class="beta-left">
      <button class="menu-toggle" id="menu-toggle" aria-label="Toggle menu" aria-expanded="false">
        <i class="fa-solid fa-bars"></i>
      </button>
      <section class="logo">
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="icon1">
    <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5m-9-6h.008v.008H12v-.008ZM12 15h.008v.008H12V15Zm0 2.25h.008v.008H12v-.008ZM9.75 15h.008v.008H9.75V15Zm0 2.25h.008v.008H9.75v-.008ZM7.5 15h.008v.008H7.5V15Zm0 2.25h.008v.008H7.5v-.008Zm6.75-4.5h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V15Zm0 2.25h.008v.008h-.008v-.008Zm2.25-4.5h.008v.008H16.5v-.008Zm0 2.25h.008v.008H16.5V15Z" />
  </svg>
  <h3 class="heading">EventFlow</h3>
</section>

    </div>

    <div class="beta-center">
      STAFF PORTAL
    </div>
      <section id="announcement-popup" class="announcement-container"></section>


    <div class="beta-right">
      <form action="/logout" method="get" class="logout-form">
        <button type="submit" class="logout-btn">
          <i class="fa-solid fa-right-from-bracket"></i> Logout
        </button>
      </form>
    </div>
  </section>

  <!-- ============== OMEGA (Main Content Area) ============== -->
  <section class="omega" id="omega">
    <div id="omega-content" class="omega-scroll">
      <%- include('team-chats') %>
    </div>
  </section>

</section>

<script>
  const alpha = document.getElementById('alpha');
  const menuToggle = document.getElementById('menu-toggle');
  const omegaContent = document.getElementById('omega-content');
  const alphaButtons = document.querySelectorAll('.alpha-btn');

  // Toggle sidebar
  menuToggle.addEventListener('click', () => {
    const isActive = alpha.classList.toggle('active');
    menuToggle.setAttribute('aria-expanded', String(isActive));
  });

  // Load content dynamically into omega
  function loadIntoOmega(url) {
    fetch(url)
      .then(res => { if (!res.ok) throw new Error('Page not found'); return res.text(); })
      .then(html => {
        omegaContent.innerHTML = html;
        const scripts = omegaContent.querySelectorAll('script');
        scripts.forEach(oldScript => {
          const newScript = document.createElement('script');
          if (oldScript.src) newScript.src = oldScript.src;
          else newScript.textContent = oldScript.textContent;
          [...oldScript.attributes].forEach(attr => newScript.setAttribute(attr.name, attr.value));
          oldScript.replaceWith(newScript);
        });
      })
      .catch(err => {
        omegaContent.innerHTML = `<p style="color:red;">Error loading page: ${err.message}</p>`;
      });
  }

  alphaButtons.forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.preventDefault();
      const page = btn.getAttribute('data-page');
      loadIntoOmega(page);
    });
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && alpha.classList.contains('active')) {
      alpha.classList.remove('active');
      menuToggle.setAttribute('aria-expanded', 'false');
    }
  });
</script>
<script src="/socket.io/socket.io.js"></script>
<script>
  // const socket = io();

  socket.on('newAnnouncement', (a) => {
    console.log('Received newAnnouncement:', a);
    const div = document.createElement('div');
    div.className = `announcement ${a.priority}`;
    div.innerHTML = `<strong>${a.title}</strong>: ${a.message}`;

    const container = document.getElementById('announcement-popup');
    container.appendChild(div);

    // auto-remove after 30s
    setTimeout(() => div.remove(), 30000);
  });
</script>

</body>
</html>
